import { Adapter, DecryptPermission, WalletAdapterNetwork, WalletName, WalletReadyState, WalletError } from '@demox-labs/aleo-wallet-adapter-base';
export interface Wallet {
    adapter: Adapter;
    readyState: WalletReadyState;
}
export interface WalletContextState {
    selectedWalletName: WalletName | null;
    setSelectedWalletName: (value: WalletName | null) => void;
    connecting: boolean;
    setConnecting: (value: boolean) => void;
    disconnecting: boolean;
    setDisconnecting: (value: boolean) => void;
    decryptPermission: DecryptPermission;
    network: WalletAdapterNetwork;
    programs: string[];
    readyState: WalletReadyState;
    connected: boolean;
    handleError: (error: WalletError) => WalletError | void;
    publicKey: string | null;
    wallet: Wallet | null;
    wallets: Wallet[];
    adapter: Adapter | null;
}
export declare const WalletContext: any;
export declare function useWallet(): WalletContextState;
