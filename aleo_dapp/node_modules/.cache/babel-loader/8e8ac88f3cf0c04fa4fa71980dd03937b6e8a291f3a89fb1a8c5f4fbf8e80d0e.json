{"ast":null,"code":"import { disconnect as _disconnect, SdkError } from '@puzzlehq/sdk-core';\nimport { useWalletStore } from '../store.js';\nimport { useAsyncAction } from './utils/_useAsyncAction.js';\nimport { useIsConnected } from '../provider/connectionProvider.js';\nimport useInjectedSubscriptions from './utils/useInjectedSubscription.js';\nexport function useDisconnect() {\n  const {\n    isConnected,\n    setIsConnected\n  } = useIsConnected();\n  const [onDisconnect] = useWalletStore(state => [state.onDisconnect]);\n  const {\n    error,\n    loading,\n    setError,\n    setLoading\n  } = useAsyncAction();\n  async function disconnect() {\n    if (!isConnected) {\n      setError(SdkError.NotConnected);\n      console.error(SdkError.NotConnected);\n      onDisconnect();\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(undefined);\n      await _disconnect();\n      onDisconnect();\n      setIsConnected?.(false);\n    } catch (err) {\n      setError(err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }\n  return {\n    error,\n    loading,\n    disconnect\n  };\n}\nexport function useOnDisconnect(callback, dependencies) {\n  useInjectedSubscriptions({\n    configs: [{\n      subscriptionName: 'onDisconnect',\n      condition: () => true,\n      onData: () => {\n        callback();\n      },\n      onError: e => {\n        console.error(e);\n      },\n      dependencies: [...dependencies]\n    }]\n  });\n}","map":{"version":3,"names":["disconnect","_disconnect","SdkError","useWalletStore","useAsyncAction","useIsConnected","useInjectedSubscriptions","useDisconnect","isConnected","setIsConnected","onDisconnect","state","error","loading","setError","setLoading","NotConnected","console","undefined","err","useOnDisconnect","callback","dependencies","configs","subscriptionName","condition","onData","onError","e"],"sources":["/Users/erdemrencbereli/Desktop/erdemrenc_ethdenver_aleo/aleo_dapp/node_modules/@puzzlehq/sdk/dist/src/hooks/useDisconnect.js"],"sourcesContent":["import { disconnect as _disconnect, SdkError } from '@puzzlehq/sdk-core';\nimport { useWalletStore } from '../store.js';\nimport { useAsyncAction } from './utils/_useAsyncAction.js';\nimport { useIsConnected } from '../provider/connectionProvider.js';\nimport useInjectedSubscriptions from './utils/useInjectedSubscription.js';\nexport function useDisconnect() {\n    const { isConnected, setIsConnected } = useIsConnected();\n    const [onDisconnect] = useWalletStore((state) => [state.onDisconnect]);\n    const { error, loading, setError, setLoading } = useAsyncAction();\n    async function disconnect() {\n        if (!isConnected) {\n            setError(SdkError.NotConnected);\n            console.error(SdkError.NotConnected);\n            onDisconnect();\n            return;\n        }\n        try {\n            setLoading(true);\n            setError(undefined);\n            await _disconnect();\n            onDisconnect();\n            setIsConnected?.(false);\n        }\n        catch (err) {\n            setError(err);\n            throw err;\n        }\n        finally {\n            setLoading(false);\n        }\n    }\n    return { error, loading, disconnect };\n}\nexport function useOnDisconnect(callback, dependencies) {\n    useInjectedSubscriptions({\n        configs: [\n            {\n                subscriptionName: 'onDisconnect',\n                condition: () => true,\n                onData: () => {\n                    callback();\n                },\n                onError: (e) => {\n                    console.error(e);\n                },\n                dependencies: [...dependencies],\n            },\n        ],\n    });\n}\n"],"mappings":"AAAA,SAASA,UAAU,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,oBAAoB;AACxE,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,cAAc,QAAQ,mCAAmC;AAClE,OAAOC,wBAAwB,MAAM,oCAAoC;AACzE,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC5B,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACxD,MAAM,CAACK,YAAY,CAAC,GAAGP,cAAc,CAAEQ,KAAK,IAAK,CAACA,KAAK,CAACD,YAAY,CAAC,CAAC;EACtE,MAAM;IAAEE,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGX,cAAc,CAAC,CAAC;EACjE,eAAeJ,UAAUA,CAAA,EAAG;IACxB,IAAI,CAACQ,WAAW,EAAE;MACdM,QAAQ,CAACZ,QAAQ,CAACc,YAAY,CAAC;MAC/BC,OAAO,CAACL,KAAK,CAACV,QAAQ,CAACc,YAAY,CAAC;MACpCN,YAAY,CAAC,CAAC;MACd;IACJ;IACA,IAAI;MACAK,UAAU,CAAC,IAAI,CAAC;MAChBD,QAAQ,CAACI,SAAS,CAAC;MACnB,MAAMjB,WAAW,CAAC,CAAC;MACnBS,YAAY,CAAC,CAAC;MACdD,cAAc,GAAG,KAAK,CAAC;IAC3B,CAAC,CACD,OAAOU,GAAG,EAAE;MACRL,QAAQ,CAACK,GAAG,CAAC;MACb,MAAMA,GAAG;IACb,CAAC,SACO;MACJJ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;EACA,OAAO;IAAEH,KAAK;IAAEC,OAAO;IAAEb;EAAW,CAAC;AACzC;AACA,OAAO,SAASoB,eAAeA,CAACC,QAAQ,EAAEC,YAAY,EAAE;EACpDhB,wBAAwB,CAAC;IACrBiB,OAAO,EAAE,CACL;MACIC,gBAAgB,EAAE,cAAc;MAChCC,SAAS,EAAEA,CAAA,KAAM,IAAI;MACrBC,MAAM,EAAEA,CAAA,KAAM;QACVL,QAAQ,CAAC,CAAC;MACd,CAAC;MACDM,OAAO,EAAGC,CAAC,IAAK;QACZX,OAAO,CAACL,KAAK,CAACgB,CAAC,CAAC;MACpB,CAAC;MACDN,YAAY,EAAE,CAAC,GAAGA,YAAY;IAClC,CAAC;EAET,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}