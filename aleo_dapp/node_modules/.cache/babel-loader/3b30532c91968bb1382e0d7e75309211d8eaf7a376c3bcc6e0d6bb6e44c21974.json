{"ast":null,"code":"import { useQuery } from '@tanstack/react-query';\nimport { useAsyncAction } from './_useAsyncAction.js';\nexport function useInjectedRequestQuery({\n  queryKey,\n  enabled,\n  queryOptions,\n  fetchFunction\n}) {\n  return useQuery(queryKey, async () => fetchFunction(), queryOptions ?? {\n    staleTime: queryKey[0] === 'getEvent' ? 7_500 : 30_000,\n    refetchInterval: queryKey[0] === 'getEvent' ? 5_000 : 15_000,\n    refetchIntervalInBackground: true,\n    enabled,\n    retry: true\n  });\n}\nexport function useInjectedRequest(params, fetchFunction) {\n  const {\n    data,\n    error,\n    loading,\n    setData,\n    setError,\n    setLoading\n  } = useAsyncAction();\n  async function request(paramsOverride) {\n    try {\n      setLoading(true);\n      setError(undefined);\n      console.log('useInjectedRequest sending request', paramsOverride ?? params);\n      const response = await fetchFunction(paramsOverride ?? params);\n      setData(response);\n      return response;\n    } catch (e) {\n      setError(e.message);\n      setLoading(false);\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  }\n  return {\n    data,\n    error,\n    loading,\n    request\n  };\n}","map":{"version":3,"names":["useQuery","useAsyncAction","useInjectedRequestQuery","queryKey","enabled","queryOptions","fetchFunction","staleTime","refetchInterval","refetchIntervalInBackground","retry","useInjectedRequest","params","data","error","loading","setData","setError","setLoading","request","paramsOverride","undefined","console","log","response","e","message"],"sources":["/Users/erdemrencbereli/Desktop/erdemrenc_ethdenver_aleo/aleo_dapp/node_modules/@puzzlehq/sdk/dist/src/hooks/utils/useRequest.js"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { useAsyncAction } from './_useAsyncAction.js';\nexport function useInjectedRequestQuery({ queryKey, enabled, queryOptions, fetchFunction, }) {\n    return useQuery(queryKey, async () => fetchFunction(), queryOptions ?? {\n        staleTime: queryKey[0] === 'getEvent' ? 7_500 : 30_000,\n        refetchInterval: queryKey[0] === 'getEvent' ? 5_000 : 15_000,\n        refetchIntervalInBackground: true,\n        enabled,\n        retry: true,\n    });\n}\nexport function useInjectedRequest(params, fetchFunction) {\n    const { data, error, loading, setData, setError, setLoading } = useAsyncAction();\n    async function request(paramsOverride) {\n        try {\n            setLoading(true);\n            setError(undefined);\n            console.log('useInjectedRequest sending request', paramsOverride ?? params);\n            const response = await fetchFunction(paramsOverride ?? params);\n            setData(response);\n            return response;\n        }\n        catch (e) {\n            setError(e.message);\n            setLoading(false);\n            throw e;\n        }\n        finally {\n            setLoading(false);\n        }\n    }\n    return { data, error, loading, request };\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAO,SAASC,uBAAuBA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,YAAY;EAAEC;AAAe,CAAC,EAAE;EACzF,OAAON,QAAQ,CAACG,QAAQ,EAAE,YAAYG,aAAa,CAAC,CAAC,EAAED,YAAY,IAAI;IACnEE,SAAS,EAAEJ,QAAQ,CAAC,CAAC,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,MAAM;IACtDK,eAAe,EAAEL,QAAQ,CAAC,CAAC,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,MAAM;IAC5DM,2BAA2B,EAAE,IAAI;IACjCL,OAAO;IACPM,KAAK,EAAE;EACX,CAAC,CAAC;AACN;AACA,OAAO,SAASC,kBAAkBA,CAACC,MAAM,EAAEN,aAAa,EAAE;EACtD,MAAM;IAAEO,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGjB,cAAc,CAAC,CAAC;EAChF,eAAekB,OAAOA,CAACC,cAAc,EAAE;IACnC,IAAI;MACAF,UAAU,CAAC,IAAI,CAAC;MAChBD,QAAQ,CAACI,SAAS,CAAC;MACnBC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEH,cAAc,IAAIR,MAAM,CAAC;MAC3E,MAAMY,QAAQ,GAAG,MAAMlB,aAAa,CAACc,cAAc,IAAIR,MAAM,CAAC;MAC9DI,OAAO,CAACQ,QAAQ,CAAC;MACjB,OAAOA,QAAQ;IACnB,CAAC,CACD,OAAOC,CAAC,EAAE;MACNR,QAAQ,CAACQ,CAAC,CAACC,OAAO,CAAC;MACnBR,UAAU,CAAC,KAAK,CAAC;MACjB,MAAMO,CAAC;IACX,CAAC,SACO;MACJP,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;EACA,OAAO;IAAEL,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEI;EAAQ,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}