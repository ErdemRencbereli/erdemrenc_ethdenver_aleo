{"ast":null,"code":"import { hasInjectedConnection } from '../utils/clientInfo.js';\nimport { SdkError } from '../data/errors.js';\nexport const decrypt = async ({\n  ciphertexts,\n  network,\n  address\n}) => {\n  if (!hasInjectedConnection()) throw new Error(`decrypt ${SdkError.PuzzleWalletNotDetected}`);\n  if (!window.aleo.puzzleWalletClient.decrypt?.query) throw new Error('decrypt.query not found!');\n  const query = {\n    method: 'decrypt',\n    params: {\n      ciphertexts: ciphertexts,\n      address,\n      network\n    }\n  };\n  try {\n    const response = await window.aleo.puzzleWalletClient.decrypt.query(query);\n    return response;\n  } catch (e) {\n    const error = e.message;\n    console.error('decrypt error', e);\n    throw e;\n  }\n};","map":{"version":3,"names":["hasInjectedConnection","SdkError","decrypt","ciphertexts","network","address","Error","PuzzleWalletNotDetected","window","aleo","puzzleWalletClient","query","method","params","response","e","error","message","console"],"sources":["/Users/erdemrencbereli/Desktop/erdemrenc_ethdenver_aleo/aleo_dapp/node_modules/@puzzlehq/sdk-core/dist/src/messages/decrypt.js"],"sourcesContent":["import { hasInjectedConnection } from '../utils/clientInfo.js';\nimport { SdkError } from '../data/errors.js';\nexport const decrypt = async ({ ciphertexts, network, address, }) => {\n    if (!hasInjectedConnection())\n        throw new Error(`decrypt ${SdkError.PuzzleWalletNotDetected}`);\n    if (!window.aleo.puzzleWalletClient.decrypt?.query)\n        throw new Error('decrypt.query not found!');\n    const query = {\n        method: 'decrypt',\n        params: {\n            ciphertexts: ciphertexts,\n            address,\n            network,\n        },\n    };\n    try {\n        const response = await window.aleo.puzzleWalletClient.decrypt.query(query);\n        return response;\n    }\n    catch (e) {\n        const error = e.message;\n        console.error('decrypt error', e);\n        throw e;\n    }\n};\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAO;EAAEC,WAAW;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EACjE,IAAI,CAACL,qBAAqB,CAAC,CAAC,EACxB,MAAM,IAAIM,KAAK,CAAC,WAAWL,QAAQ,CAACM,uBAAuB,EAAE,CAAC;EAClE,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,kBAAkB,CAACR,OAAO,EAAES,KAAK,EAC9C,MAAM,IAAIL,KAAK,CAAC,0BAA0B,CAAC;EAC/C,MAAMK,KAAK,GAAG;IACVC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;MACJV,WAAW,EAAEA,WAAW;MACxBE,OAAO;MACPD;IACJ;EACJ,CAAC;EACD,IAAI;IACA,MAAMU,QAAQ,GAAG,MAAMN,MAAM,CAACC,IAAI,CAACC,kBAAkB,CAACR,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IAC1E,OAAOG,QAAQ;EACnB,CAAC,CACD,OAAOC,CAAC,EAAE;IACN,MAAMC,KAAK,GAAGD,CAAC,CAACE,OAAO;IACvBC,OAAO,CAACF,KAAK,CAAC,eAAe,EAAED,CAAC,CAAC;IACjC,MAAMA,CAAC;EACX;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}