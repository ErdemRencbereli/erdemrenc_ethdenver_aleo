{"ast":null,"code":"import { requestSignature as _requestSignature, log_sdk, SdkError } from '@puzzlehq/sdk-core';\nimport { aleoAddressRegex } from '@puzzlehq/types';\nimport { useInjectedRequest } from './utils/useRequest.js';\nimport { useIsConnected } from '../provider/PuzzleWalletProvider.js';\nexport const useRequestSignature = ({\n  message,\n  address,\n  network\n}) => {\n  const isConnected = useIsConnected();\n  const req = {\n    method: 'requestSignature',\n    params: {\n      message,\n      address: aleoAddressRegex.test(address ?? '') ? address : undefined,\n      network\n    }\n  };\n  const {\n    request,\n    data,\n    error: _error,\n    loading\n  } = useInjectedRequest(req, async req => {\n    if (!isConnected) throw new Error(SdkError.NotConnected);\n    const response = await _requestSignature(req.params);\n    return response;\n  });\n  const error = typeof _error === 'string' ? _error : _error instanceof Error ? _error.message : undefined;\n  const response = data;\n  const requestSignature = signatureRequestOverride => {\n    if (signatureRequestOverride && isConnected && !loading) {\n      log_sdk('useRequestSignature requesting with override...', signatureRequestOverride);\n      return request({\n        method: 'requestSignature',\n        params: {\n          ...signatureRequestOverride\n        }\n      });\n    } else if (isConnected && !loading) {\n      log_sdk('useRequestSignature requesting...', [message, address]);\n      return request();\n    }\n  };\n  return {\n    requestSignature,\n    response,\n    loading,\n    error\n  };\n};","map":{"version":3,"names":["requestSignature","_requestSignature","log_sdk","SdkError","aleoAddressRegex","useInjectedRequest","useIsConnected","useRequestSignature","message","address","network","isConnected","req","method","params","test","undefined","request","data","error","_error","loading","Error","NotConnected","response","signatureRequestOverride"],"sources":["/Users/erdemrencbereli/Desktop/erdemrenc_ethdenver_aleo/aleo_dapp/node_modules/@puzzlehq/sdk/dist/src/hooks/useRequestSignature.js"],"sourcesContent":["import { requestSignature as _requestSignature, log_sdk, SdkError, } from '@puzzlehq/sdk-core';\nimport { aleoAddressRegex } from '@puzzlehq/types';\nimport { useInjectedRequest } from './utils/useRequest.js';\nimport { useIsConnected } from '../provider/PuzzleWalletProvider.js';\nexport const useRequestSignature = ({ message, address, network, }) => {\n    const isConnected = useIsConnected();\n    const req = {\n        method: 'requestSignature',\n        params: {\n            message,\n            address: aleoAddressRegex.test(address ?? '') ? address : undefined,\n            network,\n        },\n    };\n    const { request, data, error: _error, loading, } = useInjectedRequest(req, async (req) => {\n        if (!isConnected)\n            throw new Error(SdkError.NotConnected);\n        const response = await _requestSignature(req.params);\n        return response;\n    });\n    const error = typeof _error === 'string' ? _error : _error instanceof Error ? _error.message : undefined;\n    const response = data;\n    const requestSignature = (signatureRequestOverride) => {\n        if (signatureRequestOverride && isConnected && !loading) {\n            log_sdk('useRequestSignature requesting with override...', signatureRequestOverride);\n            return request({\n                method: 'requestSignature',\n                params: {\n                    ...signatureRequestOverride,\n                },\n            });\n        }\n        else if (isConnected && !loading) {\n            log_sdk('useRequestSignature requesting...', [message, address]);\n            return request();\n        }\n    };\n    return { requestSignature, response, loading, error };\n};\n"],"mappings":"AAAA,SAASA,gBAAgB,IAAIC,iBAAiB,EAAEC,OAAO,EAAEC,QAAQ,QAAS,oBAAoB;AAC9F,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,cAAc,QAAQ,qCAAqC;AACpE,OAAO,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EACnE,MAAMC,WAAW,GAAGL,cAAc,CAAC,CAAC;EACpC,MAAMM,GAAG,GAAG;IACRC,MAAM,EAAE,kBAAkB;IAC1BC,MAAM,EAAE;MACJN,OAAO;MACPC,OAAO,EAAEL,gBAAgB,CAACW,IAAI,CAACN,OAAO,IAAI,EAAE,CAAC,GAAGA,OAAO,GAAGO,SAAS;MACnEN;IACJ;EACJ,CAAC;EACD,MAAM;IAAEO,OAAO;IAAEC,IAAI;IAAEC,KAAK,EAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGhB,kBAAkB,CAACO,GAAG,EAAE,MAAOA,GAAG,IAAK;IACtF,IAAI,CAACD,WAAW,EACZ,MAAM,IAAIW,KAAK,CAACnB,QAAQ,CAACoB,YAAY,CAAC;IAC1C,MAAMC,QAAQ,GAAG,MAAMvB,iBAAiB,CAACW,GAAG,CAACE,MAAM,CAAC;IACpD,OAAOU,QAAQ;EACnB,CAAC,CAAC;EACF,MAAML,KAAK,GAAG,OAAOC,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGA,MAAM,YAAYE,KAAK,GAAGF,MAAM,CAACZ,OAAO,GAAGQ,SAAS;EACxG,MAAMQ,QAAQ,GAAGN,IAAI;EACrB,MAAMlB,gBAAgB,GAAIyB,wBAAwB,IAAK;IACnD,IAAIA,wBAAwB,IAAId,WAAW,IAAI,CAACU,OAAO,EAAE;MACrDnB,OAAO,CAAC,iDAAiD,EAAEuB,wBAAwB,CAAC;MACpF,OAAOR,OAAO,CAAC;QACXJ,MAAM,EAAE,kBAAkB;QAC1BC,MAAM,EAAE;UACJ,GAAGW;QACP;MACJ,CAAC,CAAC;IACN,CAAC,MACI,IAAId,WAAW,IAAI,CAACU,OAAO,EAAE;MAC9BnB,OAAO,CAAC,mCAAmC,EAAE,CAACM,OAAO,EAAEC,OAAO,CAAC,CAAC;MAChE,OAAOQ,OAAO,CAAC,CAAC;IACpB;EACJ,CAAC;EACD,OAAO;IAAEjB,gBAAgB;IAAEwB,QAAQ;IAAEH,OAAO;IAAEF;EAAM,CAAC;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}