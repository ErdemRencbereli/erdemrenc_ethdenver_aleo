{"ast":null,"code":"import { importSharedState as _importSharedState, SdkError } from '@puzzlehq/sdk-core';\nimport { useInjectedRequest } from './utils/useRequest.js';\nimport { useIsConnected } from '../provider/PuzzleWalletProvider.js';\nexport const useImportSharedState = ({\n  seed\n}) => {\n  const {\n    isConnected\n  } = useIsConnected();\n  const req = {\n    method: 'importSharedState',\n    params: {\n      seed\n    }\n  };\n  const {\n    request,\n    data,\n    error: _error,\n    loading\n  } = useInjectedRequest(req, async req => {\n    if (!isConnected) throw new Error(SdkError.NotConnected);\n    const response = await _importSharedState(req.params);\n    return response;\n  });\n  const error = typeof _error === 'string' ? _error : _error instanceof Error ? _error.message : undefined;\n  const response = data;\n  const importSharedState = async () => {\n    if (isConnected && !loading) {\n      return await request();\n    }\n  };\n  return {\n    importSharedState,\n    data: response?.data,\n    loading,\n    error\n  };\n};","map":{"version":3,"names":["importSharedState","_importSharedState","SdkError","useInjectedRequest","useIsConnected","useImportSharedState","seed","isConnected","req","method","params","request","data","error","_error","loading","Error","NotConnected","response","message","undefined"],"sources":["/Users/erdemrencbereli/Desktop/erdemrenc_ethdenver_aleo/aleo_dapp/node_modules/@puzzlehq/sdk/dist/src/hooks/useImportSharedState.js"],"sourcesContent":["import { importSharedState as _importSharedState, SdkError, } from '@puzzlehq/sdk-core';\nimport { useInjectedRequest } from './utils/useRequest.js';\nimport { useIsConnected } from '../provider/PuzzleWalletProvider.js';\nexport const useImportSharedState = ({ seed }) => {\n    const { isConnected } = useIsConnected();\n    const req = {\n        method: 'importSharedState',\n        params: {\n            seed,\n        },\n    };\n    const { request, data, error: _error, loading, } = useInjectedRequest(req, async (req) => {\n        if (!isConnected)\n            throw new Error(SdkError.NotConnected);\n        const response = await _importSharedState(req.params);\n        return response;\n    });\n    const error = typeof _error === 'string' ? _error : _error instanceof Error ? _error.message : undefined;\n    const response = data;\n    const importSharedState = async () => {\n        if (isConnected && !loading) {\n            return await request();\n        }\n    };\n    return { importSharedState, data: response?.data, loading, error };\n};\n"],"mappings":"AAAA,SAASA,iBAAiB,IAAIC,kBAAkB,EAAEC,QAAQ,QAAS,oBAAoB;AACvF,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,cAAc,QAAQ,qCAAqC;AACpE,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC9C,MAAM;IAAEC;EAAY,CAAC,GAAGH,cAAc,CAAC,CAAC;EACxC,MAAMI,GAAG,GAAG;IACRC,MAAM,EAAE,mBAAmB;IAC3BC,MAAM,EAAE;MACJJ;IACJ;EACJ,CAAC;EACD,MAAM;IAAEK,OAAO;IAAEC,IAAI;IAAEC,KAAK,EAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGZ,kBAAkB,CAACK,GAAG,EAAE,MAAOA,GAAG,IAAK;IACtF,IAAI,CAACD,WAAW,EACZ,MAAM,IAAIS,KAAK,CAACd,QAAQ,CAACe,YAAY,CAAC;IAC1C,MAAMC,QAAQ,GAAG,MAAMjB,kBAAkB,CAACO,GAAG,CAACE,MAAM,CAAC;IACrD,OAAOQ,QAAQ;EACnB,CAAC,CAAC;EACF,MAAML,KAAK,GAAG,OAAOC,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGA,MAAM,YAAYE,KAAK,GAAGF,MAAM,CAACK,OAAO,GAAGC,SAAS;EACxG,MAAMF,QAAQ,GAAGN,IAAI;EACrB,MAAMZ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIO,WAAW,IAAI,CAACQ,OAAO,EAAE;MACzB,OAAO,MAAMJ,OAAO,CAAC,CAAC;IAC1B;EACJ,CAAC;EACD,OAAO;IAAEX,iBAAiB;IAAEY,IAAI,EAAEM,QAAQ,EAAEN,IAAI;IAAEG,OAAO;IAAEF;EAAM,CAAC;AACtE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}