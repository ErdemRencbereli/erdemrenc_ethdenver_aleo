{"ast":null,"code":"import { useEffect } from 'react';\nimport { getEvent } from '@puzzlehq/sdk-core';\nimport { useInjectedRequestQuery } from './utils/useRequest.js';\nimport { useWalletStore } from '../store.js';\nimport useInjectedSubscriptions from './utils/useInjectedSubscription.js';\nimport { useIsConnected } from '../provider/PuzzleWalletProvider.js';\nexport const useEvent = ({\n  id,\n  address,\n  multisig = false,\n  network\n}) => {\n  const {\n    isConnected\n  } = useIsConnected();\n  const [account] = useWalletStore(state => [state.account]);\n  const isEnabled = id !== undefined && id !== '' && !!isConnected && !!account && (multisig ? !!address : true);\n  const {\n    refetch,\n    data,\n    error: _error,\n    isLoading: loading\n  } = useInjectedRequestQuery({\n    queryKey: ['useEvent', account?.address, address, network, multisig, id],\n    enabled: isEnabled,\n    fetchFunction: async () => {\n      return await getEvent({\n        id,\n        address,\n        network,\n        multisig\n      });\n    }\n  });\n  // listen for injected wallet-originating account updates\n  useInjectedSubscriptions({\n    configs: [{\n      subscriptionName: 'onSelectedAccountSynced',\n      condition: () => !!id && !multisig,\n      onData: () => refetch(),\n      onError: e => {\n        console.error(e);\n      },\n      dependencies: [id, multisig]\n    }, {\n      subscriptionName: 'onSharedAccountSynced',\n      condition: data => {\n        return !!id && !!multisig && data?.address === address;\n      },\n      onData: () => refetch(),\n      onError: e => {\n        console.error(e);\n      },\n      dependencies: [id, multisig, address]\n    }]\n  });\n  // send initial events request\n  const readyToRequest = !!isConnected && !!account && !!id && (multisig ? !!address : true);\n  useEffect(() => {\n    if (readyToRequest && !loading) {\n      refetch();\n    }\n  }, [readyToRequest]);\n  const fetchEvent = () => {\n    if (readyToRequest && !loading) {\n      refetch();\n    }\n  };\n  const error = _error?.message ?? undefined;\n  const response = data;\n  const event = response?.event;\n  return {\n    fetchEvent,\n    event,\n    error,\n    loading\n  };\n};","map":{"version":3,"names":["useEffect","getEvent","useInjectedRequestQuery","useWalletStore","useInjectedSubscriptions","useIsConnected","useEvent","id","address","multisig","network","isConnected","account","state","isEnabled","undefined","refetch","data","error","_error","isLoading","loading","queryKey","enabled","fetchFunction","configs","subscriptionName","condition","onData","onError","e","console","dependencies","readyToRequest","fetchEvent","message","response","event"],"sources":["/Users/erdemrencbereli/Desktop/erdemrenc_ethdenver_aleo/aleo_dapp/node_modules/@puzzlehq/sdk/dist/src/hooks/useEvent.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { getEvent, } from '@puzzlehq/sdk-core';\nimport { useInjectedRequestQuery } from './utils/useRequest.js';\nimport { useWalletStore } from '../store.js';\nimport useInjectedSubscriptions from './utils/useInjectedSubscription.js';\nimport { useIsConnected } from '../provider/PuzzleWalletProvider.js';\nexport const useEvent = ({ id, address, multisig = false, network, }) => {\n    const { isConnected } = useIsConnected();\n    const [account] = useWalletStore((state) => [state.account]);\n    const isEnabled = id !== undefined &&\n        id !== '' &&\n        !!isConnected &&\n        !!account &&\n        (multisig ? !!address : true);\n    const { refetch, data, error: _error, isLoading: loading, } = useInjectedRequestQuery({\n        queryKey: ['useEvent', account?.address, address, network, multisig, id],\n        enabled: isEnabled,\n        fetchFunction: async () => {\n            return await getEvent({ id, address, network, multisig });\n        },\n    });\n    // listen for injected wallet-originating account updates\n    useInjectedSubscriptions({\n        configs: [\n            {\n                subscriptionName: 'onSelectedAccountSynced',\n                condition: () => !!id && !multisig,\n                onData: () => refetch(),\n                onError: (e) => {\n                    console.error(e);\n                },\n                dependencies: [id, multisig],\n            },\n            {\n                subscriptionName: 'onSharedAccountSynced',\n                condition: (data) => {\n                    return !!id && !!multisig && data?.address === address;\n                },\n                onData: () => refetch(),\n                onError: (e) => {\n                    console.error(e);\n                },\n                dependencies: [id, multisig, address],\n            },\n        ],\n    });\n    // send initial events request\n    const readyToRequest = !!isConnected && !!account && !!id && (multisig ? !!address : true);\n    useEffect(() => {\n        if (readyToRequest && !loading) {\n            refetch();\n        }\n    }, [readyToRequest]);\n    const fetchEvent = () => {\n        if (readyToRequest && !loading) {\n            refetch();\n        }\n    };\n    const error = _error?.message ?? undefined;\n    const response = data;\n    const event = response?.event;\n    return { fetchEvent, event, error, loading };\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAS,oBAAoB;AAC9C,SAASC,uBAAuB,QAAQ,uBAAuB;AAC/D,SAASC,cAAc,QAAQ,aAAa;AAC5C,OAAOC,wBAAwB,MAAM,oCAAoC;AACzE,SAASC,cAAc,QAAQ,qCAAqC;AACpE,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,EAAE;EAAEC,OAAO;EAAEC,QAAQ,GAAG,KAAK;EAAEC;AAAS,CAAC,KAAK;EACrE,MAAM;IAAEC;EAAY,CAAC,GAAGN,cAAc,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,CAAC,GAAGT,cAAc,CAAEU,KAAK,IAAK,CAACA,KAAK,CAACD,OAAO,CAAC,CAAC;EAC5D,MAAME,SAAS,GAAGP,EAAE,KAAKQ,SAAS,IAC9BR,EAAE,KAAK,EAAE,IACT,CAAC,CAACI,WAAW,IACb,CAAC,CAACC,OAAO,KACRH,QAAQ,GAAG,CAAC,CAACD,OAAO,GAAG,IAAI,CAAC;EACjC,MAAM;IAAEQ,OAAO;IAAEC,IAAI;IAAEC,KAAK,EAAEC,MAAM;IAAEC,SAAS,EAAEC;EAAS,CAAC,GAAGnB,uBAAuB,CAAC;IAClFoB,QAAQ,EAAE,CAAC,UAAU,EAAEV,OAAO,EAAEJ,OAAO,EAAEA,OAAO,EAAEE,OAAO,EAAED,QAAQ,EAAEF,EAAE,CAAC;IACxEgB,OAAO,EAAET,SAAS;IAClBU,aAAa,EAAE,MAAAA,CAAA,KAAY;MACvB,OAAO,MAAMvB,QAAQ,CAAC;QAAEM,EAAE;QAAEC,OAAO;QAAEE,OAAO;QAAED;MAAS,CAAC,CAAC;IAC7D;EACJ,CAAC,CAAC;EACF;EACAL,wBAAwB,CAAC;IACrBqB,OAAO,EAAE,CACL;MACIC,gBAAgB,EAAE,yBAAyB;MAC3CC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAACpB,EAAE,IAAI,CAACE,QAAQ;MAClCmB,MAAM,EAAEA,CAAA,KAAMZ,OAAO,CAAC,CAAC;MACvBa,OAAO,EAAGC,CAAC,IAAK;QACZC,OAAO,CAACb,KAAK,CAACY,CAAC,CAAC;MACpB,CAAC;MACDE,YAAY,EAAE,CAACzB,EAAE,EAAEE,QAAQ;IAC/B,CAAC,EACD;MACIiB,gBAAgB,EAAE,uBAAuB;MACzCC,SAAS,EAAGV,IAAI,IAAK;QACjB,OAAO,CAAC,CAACV,EAAE,IAAI,CAAC,CAACE,QAAQ,IAAIQ,IAAI,EAAET,OAAO,KAAKA,OAAO;MAC1D,CAAC;MACDoB,MAAM,EAAEA,CAAA,KAAMZ,OAAO,CAAC,CAAC;MACvBa,OAAO,EAAGC,CAAC,IAAK;QACZC,OAAO,CAACb,KAAK,CAACY,CAAC,CAAC;MACpB,CAAC;MACDE,YAAY,EAAE,CAACzB,EAAE,EAAEE,QAAQ,EAAED,OAAO;IACxC,CAAC;EAET,CAAC,CAAC;EACF;EACA,MAAMyB,cAAc,GAAG,CAAC,CAACtB,WAAW,IAAI,CAAC,CAACC,OAAO,IAAI,CAAC,CAACL,EAAE,KAAKE,QAAQ,GAAG,CAAC,CAACD,OAAO,GAAG,IAAI,CAAC;EAC1FR,SAAS,CAAC,MAAM;IACZ,IAAIiC,cAAc,IAAI,CAACZ,OAAO,EAAE;MAC5BL,OAAO,CAAC,CAAC;IACb;EACJ,CAAC,EAAE,CAACiB,cAAc,CAAC,CAAC;EACpB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAID,cAAc,IAAI,CAACZ,OAAO,EAAE;MAC5BL,OAAO,CAAC,CAAC;IACb;EACJ,CAAC;EACD,MAAME,KAAK,GAAGC,MAAM,EAAEgB,OAAO,IAAIpB,SAAS;EAC1C,MAAMqB,QAAQ,GAAGnB,IAAI;EACrB,MAAMoB,KAAK,GAAGD,QAAQ,EAAEC,KAAK;EAC7B,OAAO;IAAEH,UAAU;IAAEG,KAAK;IAAEnB,KAAK;IAAEG;EAAQ,CAAC;AAChD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}