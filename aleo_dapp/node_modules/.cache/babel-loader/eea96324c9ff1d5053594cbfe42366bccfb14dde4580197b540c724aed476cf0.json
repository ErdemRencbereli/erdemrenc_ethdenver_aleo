{"ast":null,"code":"import { useEffect } from 'react';\nimport { hasInjectedConnection } from '@puzzlehq/sdk-core';\nimport { useIsConnected } from '../../provider/connectionProvider.js';\nconst useInjectedSubscriptions = ({\n  configs\n}) => {\n  const {\n    isConnected\n  } = useIsConnected();\n  useEffect(() => {\n    if (!hasInjectedConnection()) {\n      return;\n    }\n    const subscriptions = configs.map(({\n      subscriptionName,\n      condition,\n      onData: _onData,\n      onError: _onError\n    }) => {\n      try {\n        const subscription = window.aleo.puzzleWalletClient[subscriptionName].subscribe({\n          method: subscriptionName\n        }, {\n          onData(data) {\n            if (condition(data)) {\n              _onData(data);\n            }\n          },\n          onError(e) {\n            if (isConnected) {\n              console.error(`${subscriptionName} tRPC subscription error:`, e);\n              _onError(e);\n            }\n          }\n        });\n        return subscription;\n      } catch (e) {\n        isConnected && console.error(e);\n      }\n    });\n    // Cleanup on unmount or when dependencies change\n    return () => {\n      subscriptions.forEach(subscription => {\n        subscription?.unsubscribe();\n      });\n    };\n  }, [...configs.flatMap(config => config.dependencies), isConnected]);\n};\nexport default useInjectedSubscriptions;","map":{"version":3,"names":["useEffect","hasInjectedConnection","useIsConnected","useInjectedSubscriptions","configs","isConnected","subscriptions","map","subscriptionName","condition","onData","_onData","onError","_onError","subscription","window","aleo","puzzleWalletClient","subscribe","method","data","e","console","error","forEach","unsubscribe","flatMap","config","dependencies"],"sources":["/Users/erdemrencbereli/Desktop/erdemrenc_ethdenver_aleo/aleo_dapp/node_modules/@puzzlehq/sdk/dist/src/hooks/utils/useInjectedSubscription.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { hasInjectedConnection, } from '@puzzlehq/sdk-core';\nimport { useIsConnected } from '../../provider/connectionProvider.js';\nconst useInjectedSubscriptions = ({ configs, }) => {\n    const { isConnected } = useIsConnected();\n    useEffect(() => {\n        if (!hasInjectedConnection()) {\n            return;\n        }\n        const subscriptions = configs.map(({ subscriptionName, condition, onData: _onData, onError: _onError }) => {\n            try {\n                const subscription = window.aleo.puzzleWalletClient[subscriptionName].subscribe({ method: subscriptionName }, {\n                    onData(data) {\n                        if (condition(data)) {\n                            _onData(data);\n                        }\n                    },\n                    onError(e) {\n                        if (isConnected) {\n                            console.error(`${subscriptionName} tRPC subscription error:`, e);\n                            _onError(e);\n                        }\n                    },\n                });\n                return subscription;\n            }\n            catch (e) {\n                isConnected && console.error(e);\n            }\n        });\n        // Cleanup on unmount or when dependencies change\n        return () => {\n            subscriptions.forEach((subscription) => {\n                subscription?.unsubscribe();\n            });\n        };\n    }, [...configs.flatMap((config) => config.dependencies), isConnected]);\n};\nexport default useInjectedSubscriptions;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,qBAAqB,QAAS,oBAAoB;AAC3D,SAASC,cAAc,QAAQ,sCAAsC;AACrE,MAAMC,wBAAwB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC/C,MAAM;IAAEC;EAAY,CAAC,GAAGH,cAAc,CAAC,CAAC;EACxCF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACC,qBAAqB,CAAC,CAAC,EAAE;MAC1B;IACJ;IACA,MAAMK,aAAa,GAAGF,OAAO,CAACG,GAAG,CAAC,CAAC;MAAEC,gBAAgB;MAAEC,SAAS;MAAEC,MAAM,EAAEC,OAAO;MAAEC,OAAO,EAAEC;IAAS,CAAC,KAAK;MACvG,IAAI;QACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACC,kBAAkB,CAACT,gBAAgB,CAAC,CAACU,SAAS,CAAC;UAAEC,MAAM,EAAEX;QAAiB,CAAC,EAAE;UAC1GE,MAAMA,CAACU,IAAI,EAAE;YACT,IAAIX,SAAS,CAACW,IAAI,CAAC,EAAE;cACjBT,OAAO,CAACS,IAAI,CAAC;YACjB;UACJ,CAAC;UACDR,OAAOA,CAACS,CAAC,EAAE;YACP,IAAIhB,WAAW,EAAE;cACbiB,OAAO,CAACC,KAAK,CAAC,GAAGf,gBAAgB,2BAA2B,EAAEa,CAAC,CAAC;cAChER,QAAQ,CAACQ,CAAC,CAAC;YACf;UACJ;QACJ,CAAC,CAAC;QACF,OAAOP,YAAY;MACvB,CAAC,CACD,OAAOO,CAAC,EAAE;QACNhB,WAAW,IAAIiB,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC;IACF;IACA,OAAO,MAAM;MACTf,aAAa,CAACkB,OAAO,CAAEV,YAAY,IAAK;QACpCA,YAAY,EAAEW,WAAW,CAAC,CAAC;MAC/B,CAAC,CAAC;IACN,CAAC;EACL,CAAC,EAAE,CAAC,GAAGrB,OAAO,CAACsB,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAACC,YAAY,CAAC,EAAEvB,WAAW,CAAC,CAAC;AAC1E,CAAC;AACD,eAAeF,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}